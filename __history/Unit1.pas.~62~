unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, G_F, GF_x, B_C_H, Math, ExtCtrls;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Edit2: TEdit;
    Edit1: TEdit;
    Edit3: TEdit;
    Button1: TButton;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Edit4: TEdit;
    Edit5: TEdit;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label24: TLabel;
    Button3: TButton;
    Label25: TLabel;
    Edit6: TEdit;
    Label27: TLabel;
    Label28: TLabel;
    Label29: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label30: TLabel;
    Label26: TLabel;
    Label31: TLabel;
    Label32: TLabel;
    Label33: TLabel;
    Label34: TLabel;
    Label35: TLabel;
    Edit7: TEdit;
    Button5: TButton;
    Label36: TLabel;
    Label37: TLabel;
    Label38: TLabel;
    Label39: TLabel;
    Label40: TLabel;
    Label41: TLabel;
    Edit11: TEdit;
    Label42: TLabel;
    Label43: TLabel;
    Edit12: TEdit;
    Button6: TButton;
    Button7: TButton;
    Label44: TLabel;
    Label45: TLabel;
    Label46: TLabel;
    Button8: TButton;
    Edit13: TEdit;
    Label47: TLabel;
    Label48: TLabel;
    Label49: TLabel;
    Label50: TLabel;
    Label51: TLabel;
    Label52: TLabel;
    Label53: TLabel;
    Label54: TLabel;
    Label55: TLabel;
    Label56: TLabel;
    Label57: TLabel;


    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button8Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);


  private
    { Private declarations }
  public

    { Public declarations }
  end;

var
  Form1: TForm1;
   GF1,GF2,GF3,GF4,GF5,GF6,GF7,GF8,GF9:GF;
   GFX1,GFX2,GFX3,GFX4,GFX5,GFX6,GFX7,GFX8,GFX9:GFX;
   BCH1, BCH2: BCH;
    qvalue:integer;
implementation

{$R *.dfm}


procedure TForm1.Button1Click(Sender: TObject);
var l1,l2,degree,l0:integer;
    l3,l4:string;
    b:boolean;
begin

degree:=StrToInt(Edit1.text);
   l1:=StrToInt(Edit2.text);
   l2:=StrToInt(Edit3.text);

     qvalue:=1 shl degree;

   GF1:=GF.Create(qvalue,l1);
     GF2:=GF.Create(qvalue,l2);

      GF3:=GF.Create(qvalue);
    GF4:=GF.Create(qvalue);
     GF5:=GF.Create(qvalue);
     GF6:=GF.Create(qvalue);

 GF3:=G_F.Add(GF1,GF2);
 GF4:=G_F.Mul(GF1,GF2);
 GF5:=G_F.Divv(GF1,GF2);
 GF6:=G_F.Sub(GF1,GF2);

  Label6.Caption:=IntToStr(GF3.get_value);
  Label7.Caption:=IntToStr(GF4.get_value);
  Label9.Caption:=IntToStr(GF5.get_value);
  Label11.Caption:=IntToStr(GF6.get_value);


   b:=Equal(GF1,GF2);
   if b then  Label13.Caption:='true' else Label13.Caption:='false';

    b:=NOTEqual(GF1,GF2);
   if b then  Label15.Caption:='true' else Label15.Caption:='false';
end;



procedure TForm1.Button3Click(Sender: TObject);
var l3,l4: string;
    degree ,point:integer;
begin
degree:=StrToInt(Edit1.text);
  l3:=Edit4.Text;
  l4:=Edit5.Text;
    

   qvalue:=1 shl degree;

   GFX1:=GFX.Create(qvalue,l3);
   GFX2:=GFX.Create(qvalue,l4);
   Label34.Caption:= GFX1.toString  ;
   Label35.Caption:=   GFX2.toString  ;


   point:=strtoint(Edit6.Text);
 GFX3:=GFX.Create(qvalue);
 GFX4:=GFX.Create(qvalue);
 GFX5:=GFX.Create(qvalue);
 GFX6:=GFX.Create(qvalue);
  GFX7:=GFX.Create(qvalue);
    GFX8:=GFX.Create(qvalue);
      GFX9:=GFX.Create(qvalue);

 GF7:=GF.Create(qvalue, point);
  GF8:=GF.Create(qvalue, point);
    GF9:=GF.Create(qvalue, point);

   GFX3:=GF_x.Add(GFX1,GFX2);
     GFX4:=GF_x.Mul(GFX1,GFX2);
     GFX5:=GF_x.Divv(GFX1,GFX2);
     GFX7:=GF_x.Sub(GFX1,GFX2);
     GFX6:=GF_x.Modd(GFX1,GFX2);
     GFX8:=GF_x.Mul(GFX1,GF8);
     GFX9:=GF_x.Divv(GFX1,GF9);

     Label24.Caption:=GFX3.toString;
           Label27.Caption:=GFX4.toString;
            Label28.Caption:=GFX5.toString;
            Label29.Caption:=GFX7.toString;
          Label23.Caption:=GFX6.toString;





                    Label31.Caption:=GFX8.toString;
                      Label33.Caption:=GFX9.toString;

Label26.Caption:=GFX1.Count(GF7).ValueToString;

end;

procedure TForm1.Button4Click(Sender: TObject);
var point: Integer;
begin



end;

procedure TForm1.Button5Click(Sender: TObject);
var s,temp:string;
size,i,k,n,t:integer;
invec:ivec;
begin
  temp:=Edit7.Text;
  size:=Length( temp);
  SetLength(invec,size);

 for i:=1 To size Do
 begin
   s:= temp[i];
   k:= StrToInt(s);
   invec[i-1]:=k;
 end;
 n:=31;
 k:=21;
 t:=2;
  //BCH1:=BCH.Create(n,k,t,invec);
  BCH1:=BCH.Create(temp);
 // BCH2:=BCH.Create(BCH1);
 Label55.Caption:=inttostr(BCH1.n);
 Label56.Caption:=inttostr(BCH1.k);
 Label57.Caption:=inttostr(BCH1.t);

  Label44.Caption:=BCH1.Showg;
   Label51.Caption:=BCH1.GetCheckPolinom.tostring;

end;

procedure TForm1.Button6Click(Sender: TObject);
var infpol,s,codepol:string ;
invec,codevec: bvec;
i,size,k:integer;
begin
  infpol:=Edit11.Text;
  size:=Length( infpol);
  SetLength(invec,size);

 for i:=1 To size Do
 begin
   s:= infpol[i];
   k:= StrToInt(s);
   invec[i-1]:=k;
 end;

 codevec:=BCH1.Encode(invec);

 for i:=0 To Length(codevec)-1 Do
 begin
   codepol:=codepol+inttostr(codevec[i]);
 end;

 Label45.Caption:=codepol;
 Edit12.Text:=codepol;

end;

procedure TForm1.Button7Click(Sender: TObject);
var codev,s,s2: string  ;
cod, decodevec: bvec;
codevec:GFX;
size,k,i:integer;
begin
  codev:=Edit12.Text;
  size:=Length( codev);
  SetLength(cod,size);

 for i:=1 To size Do
 begin
   s:= codev[i];
   k:= StrToInt(s);
   cod[i-1]:=k;
 end;

   codevec:=GFX.Create(32,codev);
   Label50.Caption:=BCH1.Sindrom(codevec).toString;

   decodevec:=BCH1.Decode(cod);

   s2:='';
   for i:=0 To Length(decodevec)-1 Do
    s2:= s2+inttostr(codevec[i]);



   //Label54.Caption:=BCH1.Decode(cod);


 // :=Edit12.Text;
  //Label50.Caption:=




end;

procedure TForm1.Button8Click(Sender: TObject);
var u0:string;
kk,i,t0,n:integer;
a:array of byte;
 S, Lambda, OldLambda, T, Ohmega,x, x2,one, incS:GFX;
 delta,zero0:GF;
begin
  n:=1;
  t0:=3;

  OldLambda:=GFX.Create(n+1,t0+1);
  T:=GFX.Create(n+1);
  Ohmega:=GFX.Create(n+1);
  zero0:=GF.Create(n+1,-1) ;
  One :=GFX.Create(n+1,'1');
  x :=GFX.Create(n+1,'01');
  x2 :=GFX.Create(n+1,'001');

  delta:=GF.Create(n+1);

  u0:=Edit13.Text;
  S:=GFX.Create(n+1,u0);

  incS:= GFX.Create(n+1,Length(u0)+1);













	 //   Lambda = gfx(n+1,(char*)"0");
	  //  T = gfx(n+1,(char*)"0");
	  //  while (kk<t) {
	 //	Ohmega = Lambda * (S + One);
	 //	delta = Ohmega[2*kk+1];
	//	OldLambda = Lambda;
	//	Lambda = OldLambda + delta*( gfx(n+1,(char*)"-1 0")*T );
 //		if ((delta == gf(n+1,-1)) || (OldLambda.get_degree() > kk)) {
	//	    T = gfx(n+1,(char*)"-1 -1 0") * T;
 //		} else {
 //		    T = ( gfx(n+1,(char*)"-1 0") * OldLambda ) / delta;
 //		} 



 	if (S.get_true_degree >= 1) then //Errors in the received word
  begin            //Itterate to find Lambda(x).
    kk := 0;
    Lambda := GFX.Create(n+1,'1');
    T := GFX.Create(n+1,'1');
    while (kk<t0) do
    begin

		  Ohmega := GF_x.Mul(Lambda , GF_x.Add(S,One));
      delta.Copy(Ohmega.coeffs[2*kk+1]);
		  OldLambda.Copy(Lambda);
		  Lambda := GF_x.Add(OldLambda , GF_x.Mul( GF_x.Mul(x,T), delta ));
		    if ((Equal(delta ,zero0)) or (OldLambda.get_degree > kk)) then
		      T.Mul(x2)
        else
		      T := GF_x.Divv((GF_x.Mul ( x , OldLambda ) ), delta);

		  kk := kk + 1;
	  end;
  end;
  Label49.Caption:=Lambda.toString;


end;

end.
